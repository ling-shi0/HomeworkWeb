<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xaut.mapper.StudentMapper">

    <!-- 新增学生 -->
    <insert id="addStudent" parameterType="com.xaut.entity.Student">
		insert into db_student(sno,sname,depart,mailbox,updatetime,remark1,remark2)
		select #{sno},#{sName},#{depart},#{mailbox},#{updateTime},"预留","预留"
		from DUAL
		where not exists(
			select sno from db_student
		    where db_student.sno = #{sno}
		)
	</insert>
	
	<!-- 删除学生 -->
	<delete id="deleteStudent" parameterType="String">
        delete
		from db_student
		where db_student.sno = #{sno};
    </delete>
    
    <!-- 学生选课 -->
    <insert id="studentSelectCourse" parameterType="java.util.Map">
    	insert into db_studcour(sno,cno,iscansubmit,score,updatetime,remark1,remark2)
		select #{sno},#{cno},#{isCanSubmit},#{score},#{updateTime},'预留','预留'
		from DUAL
		where not exists(
			select * from db_studcour
		    where db_studcour.sno = #{sno} and db_studcour.cno = #{cno}
		)
    </insert>
    
    <!-- 学生退课 -->
    <delete id="studentUndoCourse">
    	delete
		from db_studcour
		where db_studcour.sno = #{sno} and db_studcour.cno = #{cno};
    </delete>
    
    <!-- 学生选作业 -->
    <insert id="studentSelectWork" parameterType="java.util.Map">
    	insert into db_studwork(sno,wno,studentworkname,subtime,times,iscorrect,comment,score,updatetime,remark1,remark2)
		select #{sno},#{wno},#{studentWorkName},#{subTime},#{times},#{isCorrect},#{comment},#{score},#{updateTime},'预留','预留'
		from DUAL
		where not exists(
			select * from db_studwork
		    where db_studwork.sno = #{sno} and db_studwork.wno = #{wno}
		)
    </insert>
    
    <!-- 学生根据作业号退选作业 -->
    <delete id="studentUndoWork">
    	delete
		from db_studwork
		where db_studwork.sno = #{sno} and db_studwork.wno = #{wno};
    </delete>
	
	<!--根据课程号分页查询学生-->
	<select id="getStudentByCourse" parameterType="String" resultType="map">
		select
			s.sno,
			s.sname,
			s.mailbox,
			s.depart,
			s.updatetime,
		 	s.remark1,
		 	s.remark2
		FROM
			db_student s
		LEFT JOIN db_studcour ON s.sno = db_studcour.sno
		WHERE
			1 = 1
			<if test="cno != null and cno != ''">
				and db_studcour.cno = #{cno}
			</if>
		    <if test="isPage == true">
				limit #{startPage},#{rows}
			</if>

	</select>

	<!--根据课程号分页查询学生时提供总数-->
	<select id="countStudent" parameterType="String" resultType="int">
		select count(*) from db_student s
		left join db_studcour ON s.sno = db_studcour.sno
		where 1 = 1
		and db_studcour.cno = #{cno}
	</select>
	
	<!-- 根据学生账号获得学生姓名 -->
	<select id="getStudentNameByUsername" parameterType="String" resultType="String">
		select sname
		from db_student
		where sno = #{username};
	</select>
	
	<!-- 获得学生所选课程概况 -->
	<select id="getCourseSurvey" parameterType="String" resultType="java.util.Map">
		select c.cno,c.cname '课程名',c.year '开课学年',c.term '开课学期',t.tno,t.tname '开课老师',t.company '老师学院',count(*) '此课程作业数'
		,(select count(*) from db_announcement a where c.cno = a.cno) '课程公告数'
		from db_studcour sc,db_course c,db_teacher t,db_work w
		where sc.sno = #{username} and sc.cno = c.cno and c.isclassend = #{isClassEnd} and c.tno = t.tno and c.cno = w.cno
		group by w.cno;
	</select>
	
	<!-- 学生详细信息 -->
	<select id="getStudentDetail" parameterType="String" resultType="java.util.Map">
		select s.*,count(sc.cno) '学生选课数'
		from db_student s,db_studcour sc
		where s.sno = #{sno} and s.sno = sc.sno;
	</select>
</mapper>